import requests
import instaloader
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import URLInputFile, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.token import TokenValidationError

# Replace with your bot token from BotFather
API_TOKEN = "7272014149:AAGEfyn8xeV9mL65P9N0z-xvjMyHMNJS8Hk"
CHANNEL_1 = "@cryptomirra"  # Replace with your actual channel username
CHANNEL_2 = "@factologiat"

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –æ–±–æ–∏—Ö –∫–∞–Ω–∞–ª–æ–≤
async def is_user_member(user_id: int) -> bool:
    try:
        chat_member_1 = await bot.get_chat_member(CHANNEL_1, user_id)
        chat_member_2 = await bot.get_chat_member(CHANNEL_2, user_id)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º (—É—á–∞—Å—Ç–Ω–∏–∫, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å)
        allowed_status = ["member", "administrator", "creator"]
        return chat_member_1.status in allowed_status and chat_member_2.status in allowed_status
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–ª–µ–Ω—Å—Ç–≤–∞: {e}")  # –û—Ç–ª–∞–¥–∫–∞
        return False  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏

def fetch_instagram_url(url):
    loader = instaloader.Instaloader()
    shortcode = url.split("/")[-2]  # –ò–∑–≤–ª–µ–∫–∞–µ–º shortcode –∏–∑ URL
    post = instaloader.Post.from_shortcode(loader.context, shortcode)

    media_urls = {
        'photo': None,
        'video': None
    }

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ñ–æ—Ç–æ —ç—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –∑–∞—Ç–µ–º –ø–æ–ª—É—á–∞–µ–º URL
    if post.is_video:
        media_urls['video'] = post.video_url  # –ü–æ–ª—É—á–∞–µ–º URL –≤–∏–¥–µ–æ
    else:
        media_urls['photo'] = post.url  # –ü–æ–ª—É—á–∞–µ–º URL —Ñ–æ—Ç–æ

    return media_urls

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ —Å TikTok
def download_tiktok_video(video_url: str) -> str | None:
    """
    –ü–æ–ª—É—á–∞–µ—Ç URL –≤–∏–¥–µ–æ —Å TikTok –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ —á–µ—Ä–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–π API.
    """
    api_url = f"https://api.tiklydown.eu.org/api/download?url={video_url}"
    response = requests.get(api_url)
    if response.status_code == 200:
        video_data = response.json()
        return video_data['video']['noWatermark']
    return None

# –ö–æ–º–∞–Ω–¥–∞: /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ö–∞–Ω–∞–ª—É 1", url=f"https://t.me/{CHANNEL_1[1:]}")],
        [InlineKeyboardButton(text="üì¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ö–∞–Ω–∞–ª—É 2", url=f"https://t.me/{CHANNEL_2[1:]}")],
        [InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data="check_membership")]
    ])
    await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç—É–ø–∏—Ç–µ –≤ –æ–±–∞ –∫–∞–Ω–∞–ª–∞, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫ –Ω–∞ TikTok –∏ Instagram, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–≤–µ—Ä–µ–Ω
@dp.message()
async def handle_url(message: types.Message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –æ–±–æ–∏—Ö –∫–∞–Ω–∞–ª–æ–≤
    if not await is_user_member(user_id):
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üì¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ö–∞–Ω–∞–ª—É 1", url=f"https://t.me/{CHANNEL_1[1:]}")],
            [InlineKeyboardButton(text="üì¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ö–∞–Ω–∞–ª—É 2", url=f"https://t.me/{CHANNEL_2[1:]}")],
            [InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data="check_membership")]
        ])
        await message.answer("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –æ–±–∞ –∫–∞–Ω–∞–ª–∞, –ø—Ä–µ–∂–¥–µ —á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞.", reply_markup=keyboard)
        return  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É, –µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ

    url = message.text
    if "tiktok.com" in url:
        # –ü–æ–ª—É—á–∞–µ–º URL –≤–∏–¥–µ–æ
        video_url = download_tiktok_video(url)
        if video_url:
            await message.answer("‚¨áÔ∏è –ó–∞–≥—Ä—É–∂–∞—é –≤–∞—à–µ –≤–∏–¥–µ–æ...")
            try:
                video_file = URLInputFile(video_url)
                await message.answer_video(video_file)
            except Exception as e:
                await message.answer(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ. –û—à–∏–±–∫–∞: {e}")
        else:
            await message.answer("‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    elif "instagram.com/p/" in url or "instagram.com/reel/" in url:
        await message.answer("–ò–∑–≤–ª–µ–∫–∞—é –º–µ–¥–∏–∞... ‚è≥")
        try:
            media_urls = fetch_instagram_url(url)
            if media_urls['video']:
                await bot.send_video(message.chat.id, media_urls['video'])
                print(f"–û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ –∏–∑ URL: {media_urls['video']}")
            elif media_urls['photo']:
                await bot.send_photo(message.chat.id, media_urls['photo'])
                print(f"–û—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–æ—Ç–æ –∏–∑ URL: {media_urls['photo']}")
            await message.answer("–ú–µ–¥–∏–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ‚úÖ")
        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    else:
        await message.answer("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ Instagram –∏–ª–∏ TikTok.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
@dp.callback_query(lambda c: c.data == "check_membership")
async def check_membership(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    if await is_user_member(user_id):
        await callback_query.answer("–ü—Ä–æ–≤–µ—Ä–∫–∞...")
        await callback_query.message.answer("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ Instagram –∏–ª–∏ TikTok.")
    else:
        await callback_query.answer("–ü—Ä–æ–≤–µ—Ä–∫–∞...")
        await callback_query.message.answer("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –æ–±–∞ –∫–∞–Ω–∞–ª–∞, –ø—Ä–µ–∂–¥–µ —á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    try:
        await dp.start_polling(bot)
    except TokenValidationError:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ API_TOKEN.")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    try:
        import asyncio
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        asyncio.run(main())
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

